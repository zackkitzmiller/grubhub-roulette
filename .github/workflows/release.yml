name: 🚀 Release to Chrome Web Store

on:
  release:
    types: [published]
  workflow_dispatch: # Allow manual triggering

jobs:
  # Use the reusable validation workflow
  validate:
    uses: ./.github/workflows/validate.yml
    with:
      run-tests: false # Skip tests for faster release validation

  build-and-publish:
    name: 📦 Build & Publish Extension
    runs-on: ubuntu-latest
    needs: validate # Only run after validation passes

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: 📦 Install dependencies
        run: |
          # Install jq for JSON validation and zip for packaging
          sudo apt-get update
          sudo apt-get install -y jq zip

      - name: 📋 Update version from release
        run: |
          echo "📋 Updating version from release tag..."

          # Get version from release tag (remove 'v' prefix if present)
          VERSION=${GITHUB_REF_NAME#v}
          echo "Version: $VERSION"

          # Update manifest.json version
          jq --arg version "$VERSION" '.version = $version' manifest.json > manifest.json.tmp
          mv manifest.json.tmp manifest.json

          # Update package.json version
          jq --arg version "$VERSION" '.version = $version' package.json > package.json.tmp
          mv package.json.tmp package.json

          echo "✅ Updated version to $VERSION"

          # Export VERSION for later steps
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: 🏗️ Build extension package
        run: |
          echo "🏗️ Building extension package..."

          # Create build directory
          mkdir -p build

          # Copy all necessary files to build directory
          cp manifest.json build/
          cp popup.html build/
          cp -r css/ build/
          cp -r js/ build/
          cp -r icons/ build/

          # Create zip file for Chrome Web Store
          cd build
          zip -r ../grubhub-roulette-v${VERSION}.zip . -x "*.DS_Store" "*.git*" "*.md" "tests/*" "docs/*" ".github/*"
          cd ..

          echo "✅ Extension package created: grubhub-roulette-v${VERSION}.zip"

          # List contents for verification
          echo "📦 Package contents:"
          unzip -l grubhub-roulette-v${VERSION}.zip

      - name: 📤 Upload to Chrome Web Store
        uses: mnao305/chrome-extension-upload@v5.0.0
        with:
          extension-id: ${{ secrets.CHROME_EXTENSION_ID }}
          client-id: ${{ secrets.CHROME_CLIENT_ID }}
          client-secret: ${{ secrets.CHROME_CLIENT_SECRET }}
          refresh-token: ${{ secrets.CHROME_REFRESH_TOKEN }}
          file-path: grubhub-roulette-v${{ env.VERSION }}.zip
          publish: true

      - name: 📊 Create release summary
        run: |
          echo "📊 Release Summary"
          echo "=================="
          echo "✅ Extension built successfully"
          echo "✅ Version: $VERSION"
          echo "✅ Package: grubhub-roulette-v${VERSION}.zip"
          echo "✅ Published to Chrome Web Store"
          echo ""
          echo "🎉 Release completed successfully!"

      - name: 📤 Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: grubhub-roulette-v${{ env.VERSION }}
          path: |
            grubhub-roulette-v${{ env.VERSION }}.zip
            build/
          retention-days: 30

      - name: 🏷️ Create GitHub release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./grubhub-roulette-v${{ env.VERSION }}.zip
          asset_name: grubhub-roulette-v${{ env.VERSION }}.zip
          asset_content_type: application/zip
